type({})

dct = {"amada": 20, "tanaka": 25}

dct

dct["amada"]

dct["tanaka"] = 30

dct

dct["yamada"] = 22

dct

del dct["tanaka"]

dct

'''
    辞書型辞書（ディクショナリ）は複数の要素を「キー」と「値」の組み合わせで管理するデータ型で、言語によっては「連想配列」や「ハッシュ」と呼ばれます。
    ミュータブルではありますが、各要素には順序の概念がありません。辞書型のデータは波括弧（{}）の中にキーと値をセットにしたデータをカンマで区切って宣言します。
    キーに対する値のデータ型は辞書内で一致している必要はなく、要素を何も指定しなければ空の辞書が生成されます。

    なお、リストやタプルと違い、要素へは角括弧に対象のキー名を指定してアクセスします。
    また、存在しないキーへ値を代入した際には要素が辞書に追加され、要素の削除には"del"文を使います。

        キーには数値やタプルを使うこともできます。

    数値を指定する意味はあまりありませんが、タプルの指定は用途によっては重宝します。

'''

'''

key1 = ("amada", "あまだ")

key2 = ("tanaka", "たなか")

dct = {key1: 20, key2: 30}

dct

'''

'''
    次に、辞書にもリストのようにいくつかのメソッドが用意されています。抑えておきたいメソッドは次の通りです。

    .update
    .pop
    .popitem
    .clear
    .keys
    .values
    .items
    dict
'''

dct1 = {"a": 1, "b": 2}

dct2 = {"b": 3, "c": 4}

dct1.update(dct2)           #辞書を統合する（重複するキーは上書き、それ以外は追加となる）

print(dct1)#

dct = {"a": 1, "b": 2, "c": 3}

val = dct.pop("b")          #指定したキーに該当する要素を取り出して返却する

print(val)

print(dct)

dct = {"a": 1, "b": 2, "c": 3}

val = dct.popitem()         #辞書内のいずれかの要素を取り出して返却する（取り出される要素はキーと値を含んだタプルで、対象はランダム）

print(val)

print(dct)

#リセット後再度実行

dct = {"a": 1, "b": 2, "c": 3}#

val = dct.popitem()#        #上記、対象はランダムという事でしたが、ターミナル上でのテストでは何回やっても同じ値でした。

print(val)#

print(dct)#

dct = {"a":1, "b": 2, "c": 3}

dct.clear()         #全ての要素を削除する

print(dct)#

dct = {"a":1, "b": 2, "c": 3}

dct.keys()          #キーの一覧を取得する

print(dct.keys())#

dct = {"a": 1, "b": 2, "c": 3}

dct.values()        #値の一覧を取得する

print(dct.values())#

dct = {"a": 1, "b": 2, "c": 3}

dct.items()         #キーと値のペア一覧を取得する

print(dct.items())#

dct = dict(a = "a", b = "b", c = "c")   #辞書を作成する

print(dct)#


'''
    最後に、リストと同じように辞書にも内包表記が用意されているので、ここでも記述方法を例で確認しましょう。


'''

dct = {i: i * 2 for i in range(3)}

dct

print(dct)#

dct = {i: i * 2 for i in range(3) if i % 3 == 0}

print(dct)#

dct = {i: "even" if i % 2 == 0 else "odd" for i in range(3)}

dct

print(dct)#


'''
    基本的にはリストの内包表記を理解していればこちらも理解できると思います。
    リストとの違いは「式を囲う括弧の種類」「キーと値を指定する」点のみです。
    リストと比べると実際のコーディングでの出番は少ないと思われますが、「辞書にも内包表記がある」と言うことは覚えておくようにしましょう。

'''
