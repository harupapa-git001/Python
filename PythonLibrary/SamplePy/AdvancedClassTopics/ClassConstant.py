'''
    クラス定数
    
    クラス変数は変数名を大文字にすることで「クラス定数」としても利用できます。以下にサンプルコードを記載します。

'''

class Calc:
    #クラス定数の定義
    
    TAX_RATE = 1.08
    
    def __init__(self, cut_rate):
        self.cut_rate = cut_rate
        
    def get_price(self, tag_price):
        return int(tag_price * self.cut_rate * Calc.TAX_RATE)
        
taro_calc = Calc(0.95)

jiro_calc = Calc(0.9)

print(taro_calc.get_price(10000))

print(jiro_calc.get_price(10000))

'''
    上記の例は顧客ごとに商品の値段を求めるサンプルです。
    
    各顧客はそれぞれ異なる割引率を持っており、それはインスタンス変数として定義されています。
    
    一方、税率 TAX_RATEはどの顧客でも変わらないためクラス定数として持たせています。
    
    クラス定数は基本的に普通の定数と同じルールで使います。
    
    普通の定数との違いは単にクラスの中にあるということだけです。
    
    前書でもお話したように pythonには本当の意味での「定数(値を変えられない変数)」はなく、大文字の変数名の変数を上書きしないというプログラマのルールで変数を定数として使っています。
    
    そのため、既に定義をされた定数は絶対に上書きしないで下さい。クラス定数の便利な使い方に「クラス定数のみを持つクラス」があります。
    
    たとえばプログラムで色コードが必要な場合、それをまとめて1つのクラスにクラス変数として定義してしまい、それを他のプログラムが利用するといった使いかたが考えられます。

'''

class Color:
    BLACK = "000000"
    
    GRAY = "808080"
    
    WHITE = "ffffff"
    
    BLUE = "0000ff"
    
    GREEN = "00ff00"
    
    RED = "ff0000"
    
print(Color.RED)

print(Color.BLACK)

'''
    色を必要とするクラスが複数ある場合、それらのクラスは上記のようなクラスを参照して色を使えば複数のクラス間で一貫した色の扱いをすることができます。

'''
