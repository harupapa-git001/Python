'''
    バッファリングファイルへの読み書きをする際に知っておいてもらいたいのが「バッファリング」という処理です。
    
    ご存知かもしれませんが、ハードディスクへのアクセス速度はメモリへのアクセス速度に比べて何桁も遅いです。
    
    そのため、ファイルを何度も細かく読み書きすることを繰り返しているとプログラムが非常に低速になってしまいます。

    この問題を防ぐために、出力があるたびに毎回ディスクに書き込むのではなく、メモリ上の高速な一時領域にデータをおいておき、まとめてそれを読み書きするという処理が行われます。
    
    こうすることで低速なディスクアクセスの回数が減らせるのでプログラムが高速化されます。これがバッファリングの基本的な概念です。

    このディスクへの書き込みは Pythonが判断して適切なタイミングで発生するようですが、書き込みを強制的に行いたい場合はそこでflush()メソッドを使います。

'''

f = open("text3.txt", "w")

f.write("123")

f.flush()

f.write("456")

f.close()

'''
    closeのタイミングで必ず書き込まれるので、今回のようにopenからcloseまで時間が短い場合はflushは不要です。
    
    ただ、openしっぱなしで、なかなかcloseしないようなプログラムは適切なタイミングでflushするように心がけてください。
    
    でないと、プログラムが強制終了されてしまった場合などに、ファイルに書き込みがされていない可能性があります。

'''
