'''
    with/asによるファイル処理withとasは「コンテキスト」を扱うための特別な構文です。
    
    ほかの言語ではあまり見られない少々独特な概念なのですが、知っておいて損はないと思うので取り扱いたいと思います。
    
    コンテキストの詳細については下編で扱います。
    
    コンテキストという言葉は少しボヤッとしているのすが、「ある特定の処理」を実行するための状態(モード)だと言えるかもしれません。
    
    たとえばファイル処理なのですが、基本的には以下の流れとなります。
    
    1. ファイルをオープンする
    2. 読み書き
    3. ファイルをクローズ

    これは「ファイル処理のための状態(モード)に入っている」という状況です。
    
    当然ながら自分で書くプログラムなので、ファイルを意図的にオープンしっぱなしにして何もしないことも可能ですが。
    
    ただ、ほとんどの場合は単にファイルをクローズし忘れているだけです。
    
    withと asは Pythonの文法として「ある一連の処理」を完遂することを目的に使うものです。
    
    具体的には以下のように使います。

    with A as B
        処理
        
    Aはコンテキストをサポートする特別なオブジェクトであり、Bはそれが代入されているのですが、ここでは深いことは気にせずファイル処理を withとasで行ってみます。
    
    以下のコードを見てください。

'''
#FileProcessingフォルダの中にあるtext1.txtを同じディレクトリに置いて実行してください。

with open("text1.txt", "r") as f:
    for line in f:
        print(line)

'''
    このプログラムは text1.txtを読み取り専用モードで開き、その中身を一行ずつプリントするというプログラムです。
    
    注目して欲しいのは今までのように open関数で作ったファイルオブジェクトを代入するのではなく、with と as でコンテキストとして扱っていることです。
    
    ここではopen('hello.txt','r')がコンテキストをサポートするファイルオブジェクトを返し、それがfに格納されています。
    
    そしてこのfを使ってファイル処理をしています。一般的なopen関数と代入によるファイルオブジェクトの取得ではなく、 with/asを使うとファイルオブジェクトがクローズされることが保証されます。

'''
