'''
    メソッドのオーバーロードオブジェクト指向にはオーバーロードと呼ばれている概念があります。
    
    オーバーライドと名前が似ているので注意してください。
    
    オーバーロードを簡単に言ってしまうと「あるクラスに同名の引数が異なるメソッドを複数宣言すると、呼び出し時の引数に応じて呼び出されるメソッドが変わる」というものです。
    
    実はオーバーロードは Pythonにはありません。
    
    ただ、オーバーロード相当のことは「デフォルト引数」や「可変長引数」などを使うことで実現できます。
    
    以下にデフォルト引数を使ったオーバーロードもどきのサンプルを張ります。

'''

class MyClass:
    def test(self, a, b, c = "C", d = "D"):
        print(a, b, c, d)

'''
    関数の可変長引数については前書で説明したためここでは詳細は扱いませんが、対応する引数を与えればそれになり、あたえなければ =の後のデフォルト値になるという動きをします。
    
    メソッドも同じことができます。使用例は以下のようになります。

'''

mc = MyClass()

mc.test("AA", "BB")

mc.test("AA", "BB", "CC")

'''
    見てもらうと分かるように同名のメソッドを引数2でも引数3でも呼び出すことができています。

'''
