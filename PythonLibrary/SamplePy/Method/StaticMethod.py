'''
    スタティックメソッドクラスメソッドに似た性質を持つスタティックメソッドというものもあります。
    
    簡単に言ってしまうとスタティックメソッドは「クラスメソッドの第一引数がない版」のようなものです。
    
    そのため、引数clsを使ってクラス変数やクラスメソッドにアクセスできないため、アクセスするには「クラス名.属性」とします。
    
    宣言は @classmethodの代わりに @staticmethodとします。以下にサンプルを記載します。

'''

class MyClass:
    a = "A"
    
    #@を使ってスタティックメソッドとして定義
    
    @staticmethod

    def print_a():
        print(MyClass.a)
        
MyClass.print_a()

'''
    スタティックメソッドはある種の処理をまとめたユーティリティ用のクラスを作るときに便利です。
    
    クラスのメソッドがインスタンス変数もクラス変数も全く使わない場合、それをスタティックメソッドにしてしまうと余計な引数の定義がいらなくなります。
    
    このユーティリティ用のクラスは例えば以下のような形になります。

'''

class MyUtil:

    @staticmethod

    def function1():
        pass
        
    @staticmethod

    def function2():
        pass
        
    @staticmethod

    def function3():
        pass

'''
    MyUtilというクラスがグループ名で各メソッドが個々の処理になります。
    
    インスタンス変数やクラス変数を使わないため、それぞれの処理は完全に独立しているものの、同じジャンルの処理をクラスにまとめているといった形です。ある作業をまとめたモジュールに無数の関数が定義されているのと似ています。
    
    なお、クラスメソッドやスタティックメソッドは継承と関わると話が複雑になります。
    
    興味がある人は調べてみるとよいかもしれませんが、そんな詳細まで把握している人は限られているため、使わないほうがよいと思います。

'''
